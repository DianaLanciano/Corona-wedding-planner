@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@model IEnumerable<CoronaWedding.Models.Location>

@{ ViewData["Title"] = "Index"; }



<div class="title">
    <img src="/Media/images/locationLogo.PNG" alt="title" class="rounded mx-auto d-block">
</div>
<hr>

@if (HttpContextAccessor.HttpContext.Session.GetString("userId") != null)
{
    var all = (ViewBag.area == null || ViewBag.area == "all");
    var north = (ViewBag.area == "north");
    var south = (ViewBag.area == "south");
    var center = (ViewBag.area == "center");

<div class="row">
    <div class="form-group col-3">
        <label for="area">Area</label>
        <select class="form-control" id="area">
            <option value="all" selected="@all">All</option>
            <option value="north" selected="@north">North</option>
            <option value="south" selected="@south">South</option>
            <option value="center" selected="@center">Center</option>
        </select>
    </div>
    <div class="form-group col-3">
        <label class="control-label">City</label>
        <input value="@ViewBag.city" class="form-control" id="cityFromUser" type="text" size="50" placeholder="Enter Israeli City.." />
    </div>
    <div class="form-group col-2">
        <label for="fromPrice">From Price</label>
        <input value="@ViewBag.fromPrice" type="number" class="form-control" id="fromPrice" placeholder="From Price">
    </div>
    <div class="form-group col-2">
        <label for="toPrice">To Price</label>
        <input value="@ViewBag.toPrice" type="number" class="form-control" id="toPrice" placeholder="To Price">
    </div>
    <button type="button" class="btn btn-light col-1 advancedSerachLocation"><i class="fas fa-search" aria-hidden="true"></i></button>
</div>}

<div class="filter-nav">
    <button class="filter-all filterButton" data-filter="all" value="all" name="Locations"> Show All</button>
    <button class="filter filterButton" data-filter="north" value="north" name="Locations"> Notrh</button>
    <button class="filter filterButton" data-filter="center" value="center" name="Locations"> Center</button>
    <button class="filter filterButton" data-filter="south" value="south" name="Locations"> South</button>
</div>

@foreach (var item in Model)
{
<div class="responsive-images">
    <div class="filterDiv">
        @if (ViewBag.IsAdmin)
        {
<div class="row">
    <a class="edit" asp-controller="Locations" asp-action="Edit" asp-route-id="@item.LocationId"><i class="fas fa-edit"></i></a>
    <a class="delete" asp-controller="Locations" asp-action="Delete" asp-route-id="@item.LocationId"><i class="fas fa-trash-alt"></i></a>
</div>}


        <div class="row">
            <div class="col">
                <img id=@item.LocationId src="@item.imagePath" class="imageFilter" name="Locations">
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h5 dir="rtl">Email:<br /> @item.supplierEmail</h5>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h5 dir="rtl">Place capacity: @item.placeCapacity</h5>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h5 dir="rtl">Price: @item.price</h5>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <button class="buttonForSite addToCartButoon" id=@item.LocationId name="Location">
                    Add To Cart
                </button>
            </div>
        </div>
    </div>
</div>}

<div class="row">
    <div class="row prevAndNext">
        <div class="col align-self-center">
            <a class="previous" asp-controller="Locations" asp-action="Index">&laquo; Previous</a>
            <a class="next" asp-controller="Caterings" asp-action="Index">Next &raquo;</a>
        </div>
    </div>
</div>
<input class="form-control" id="city" type="text" hidden />



@section Scripts{
    @{await Html.RenderPartialAsync("_Popup");}
    <script src="~/js/dynamicFilter.js"></script>
}




<script>
    function initSearch() {
        var input = document.getElementById("cityFromUser");
        var options = {
            componentRestrictions: { country: 'il' }
        };

        autocomplete = new google.maps.places.Autocomplete(input, options);
        google.maps.event.addListener(autocomplete, 'place_changed', function () {
            var place = autocomplete.getPlace();
            document.getElementById("city").value = place.vicinity;
        });
    }
</script>
